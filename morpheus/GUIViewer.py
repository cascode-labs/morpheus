# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Fri Jun 30 08:17:04 2023
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

from morpheus.TabTemplate import TabTemplate

class GUIViewer(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: GUI_Viewer.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetTitle("Morpheus Test Bench Generator")

        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, "Save", "")
        wxglade_tmp_menu.Append(wx.ID_ANY, "Save as", "")
        self.frame_menubar.Append(wxglade_tmp_menu, "File")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        self.frame_statusbar = self.CreateStatusBar(1)
        self.frame_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_statusbar_fields = ["frame_statusbar"]
        for i in range(len(frame_statusbar_fields)):
            self.frame_statusbar.SetStatusText(frame_statusbar_fields[i], i)

        self.panel_main = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_SIMPLE)


        self.build_header()
        self.build_body()
        self.panel_main.SetSizer(self.body)

        self.body.Fit(self)
        self.Layout()
        self.Centre()

    def build_body(self):
        rows = 3
        cols = 1
        self.body = wx.FlexGridSizer(rows, cols, 0, 0)
        self.body.Add(self.header, 1, wx.EXPAND | wx.LEFT | wx.RIGHT, 0)

        self.testbench_tabs = wx.Notebook(self.panel_main, wx.ID_ANY)
        self.body.Add(self.testbench_tabs, 1, wx.EXPAND, 0)
        #self.body.AddGrowableRow(3)
        self.body.AddGrowableRow(2)
        self.body.AddGrowableRow(1)
        self.body.AddGrowableCol(0)
        #self.optionsTabMaestro()

        #self.body.AddGrowableRow(0)
        #self.body.AddGrowableRow(1)

    def build_header(self):
        rows = 3
        cols = 2
        self.header = wx.FlexGridSizer(rows, cols, 0, 0)
    # ROW 1) CONFIG FILE SELECTION
        #text
        configs_txt = wx.StaticText(self.panel_main, wx.ID_ANY, "Select Config File")
        self.header.Add(configs_txt, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 50)
        #dropdown
        self.config_sel = wx.ComboBox(self.panel_main, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.header.Add(self.config_sel, 0, wx.ALL | wx.EXPAND, 2)

    # ROW 2) Testbench LIBRARY SELECTION
        #text
        lib_txt = wx.StaticText(self.panel_main, wx.ID_ANY, "Select Testbench Library")
        self.header.Add(lib_txt, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 50)
        #dropdown
        self.lib_sel = wx.ComboBox(self.panel_main, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.header.Add(self.lib_sel, 0, wx.ALL | wx.EXPAND, 2)
    # ROW 3) RUN BUTTON
        self.run_btn = wx.Button(self.panel_main, wx.ID_ANY, "Make Test\n")
        self.run_btn.SetMinSize((170, 30))
        self.run_btn.SetMaxSize((170, 30))
        self.header.Add(self.run_btn, 0, wx.ALIGN_CENTER_VERTICAL | wx.FIXED_MINSIZE | wx.LEFT, 10)

        buffer_txt = wx.StaticText(self.panel_main, wx.ID_ANY, "")#buffer
        self.header.Add(buffer_txt, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 50)
        #self.panel_main.SetSizer(self.header)

        for i in range(rows): #make rows growable
            self.header.AddGrowableRow(i)
# end of class GUI_Viewer
    def optionsTabMaestro(self):
        tab_name = "Maestro Options"
        new_tab = TabTemplate(self.testbench_tabs, wx.ID_ANY)  #Create tab using the TabTemplate Class
        self.testbench_tabs.AddPage(new_tab, tab_name)
        rows = 2
        tab_grid = wx.FlexGridSizer(rows, 2, 0, 0) #Configure Notebook tab
        tab_grid.AddGrowableCol(1)
        print("adding options")

        txt = wx.StaticText(new_tab, wx.ID_ANY, "Overwrite Maestro View?")
        tab_grid.Add(txt, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 50)
        self.maestro_overwrite = wx.CheckBox(new_tab,wx.ID_ANY,"yes", style=0)
        tab_grid.Add(self.maestro_overwrite, 0, wx.ALL | wx.EXPAND, 2)

        txt = wx.StaticText(new_tab, wx.ID_ANY, "Import Schematic View?")
        tab_grid.Add(txt, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 50)
        txt = wx.StaticText(new_tab, wx.ID_ANY, "Overwrite Schematic View?")
        tab_grid.Add(txt, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 50)
        new_tab.SetSizer(tab_grid)
        #tab_grid.Fit(new_tab)
        #new_tab.sizer_2.Add(tab_grid, 0, wx.EXPAND, 0)
        #new_tab.SetSizer(generate_tab.sizer_2)
        new_tab.Layout()